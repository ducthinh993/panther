AWSTemplateFormatVersion: 2010-09-09
Description: The very first Panther stack - static resources which don't require S3
  for deployment
Parameters:
  AccessLogsBucket:
    Type: String
    Description: Optional external bucket name for storing S3 access logs. If blank,
      the Panther audit bucket is used.
    AllowedPattern: ^([a-z0-9.-]{3,63})?$
  AlarmTopicArn:
    Type: String
    Description: An existing SNS topic for CloudWatch alarms. If blank, one is created
      for you.
    AllowedPattern: ^(arn:(aws|aws-cn|aws-us-gov):sns:[a-z]{2}-[a-z]{4,9}-[1-9]:\d{12}:\S+)?$
  CloudWatchLogRetentionDays:
    Type: Number
    Description: CloudWatch log retention period
    MinValue: 1
  CustomDomain:
    Type: String
    Description: The FQDN that will be used by the web application (defaults to autogenerated
      ALB URL)
    AllowedPattern: ^([a-z0-9.-]+\.[a-z]{2,})?$
  DataReplicationBucket:
    Type: String
    Description: Optional external bucket arn for replicating processed data in s3
      glacier.
    AllowedPattern: ^(arn:(aws|aws-cn|aws-us-gov):s3:::[a-z0-9.-]{3,63})?$
  Debug:
    Type: String
    Description: Toggle debug logging
    AllowedValues:
    - true
    - false
  DeployFromSource:
    Type: String
    Description: A few extra resources are required when deploying from source
    AllowedValues:
    - true
    - false
  EnableS3AccessLogs:
    Type: String
    Description: Enable S3 access logging for all Panther buckets
    AllowedValues:
    - true
    - false
  LoadBalancerSecurityGroupCidr:
    Type: String
    Description: Allow HTTP(S) ingress access to the web app (ALB) security group
      from this IP block. Use 0.0.0.0/0 to allow unrestricted access
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
  LogSubscriptionPrincipals:
    Type: CommaDelimitedList
    Description: The list of Principal ARNs to allow read access to the ProcessedDataBucket
      and subscribe access to ProcessedDataTopicArn
  SecurityGroupID:
    Type: String
    Description: An existing SecurityGroup to deploy Panther into
    AllowedPattern: ^(sg-[0-9a-f]{10,})?$
  SubnetOneIPRange:
    Type: String
    Description: A valid & available IP range in the existing VPC you plan to deploy
      Panther into.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
  SubnetTwoIPRange:
    Type: String
    Description: A second valid & available IP range in the existing VPC you plan
      to deploy Panther into, for multiple AZ redundancy.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
  TracingMode:
    Type: String
    Description: Enable XRay tracing on GraphQL queries & mutations
    AllowedValues:
    - ''
    - Active
    - PassThrough
  VpcID:
    Type: String
    Description: An existing VPC to deploy Panther into
    AllowedPattern: ^(vpc-[0-9a-f]{10,})?$
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/24
    PublicOne:
      CIDR: 10.0.0.0/26
    PublicTwo:
      CIDR: 10.0.0.64/26
  ELBAccounts:
    us-east-1:
      ARN: arn:aws:iam::127311923021:root
    us-east-2:
      ARN: arn:aws:iam::033677994240:root
    us-west-1:
      ARN: arn:aws:iam::027434742980:root
    us-west-2:
      ARN: arn:aws:iam::797873946194:root
    ca-central-1:
      ARN: arn:aws:iam::985666609251:root
    eu-central-1:
      ARN: arn:aws:iam::054676820928:root
    eu-west-1:
      ARN: arn:aws:iam::156460612806:root
    eu-west-2:
      ARN: arn:aws:iam::652711504416:root
    eu-west-3:
      ARN: arn:aws:iam::009996457667:root
    eu-north-1:
      ARN: arn:aws:iam::897822967062:root
    ap-east-1:
      ARN: arn:aws:iam::754344448648:root
    ap-northeast-1:
      ARN: arn:aws:iam::582318560864:root
    ap-northeast-2:
      ARN: arn:aws:iam::600734575887:root
    ap-northeast-3:
      ARN: arn:aws:iam::383597477331:root
    ap-southeast-1:
      ARN: arn:aws:iam::114774131450:root
    ap-southeast-2:
      ARN: arn:aws:iam::783225319266:root
    ap-south-1:
      ARN: arn:aws:iam::718504428378:root
    me-south-1:
      ARN: arn:aws:iam::076674570225:root
    sa-east-1:
      ARN: arn:aws:iam::507241528517:root
    us-gov-west-1:
      ARN: arn:aws:iam::048591011584:root
    us-gov-east-1:
      ARN: arn:aws:iam::190560391635:root
    cn-north-1:
      ARN: arn:aws:iam::638102146993:root
    cn-northwest-1:
      ARN: arn:aws:iam::037604701340:root
Conditions:
  ConfigureLogSubscriptions:
    Fn::Not:
    - Fn::Equals:
      - Fn::Select:
        - 0
        - Ref: LogSubscriptionPrincipals
      - ''
  EnableAccessLogs:
    Fn::Equals:
    - Ref: EnableS3AccessLogs
    - true
  ExternalAccessLogs:
    Fn::Not:
    - Fn::Equals:
      - Ref: AccessLogsBucket
      - ''
  NotExternalAccessLogs:
    Fn::Equals:
    - Ref: AccessLogsBucket
    - ''
  ReplicateData:
    Fn::Not:
    - Fn::Equals:
      - Ref: DataReplicationBucket
      - ''
  TracingEnabled:
    Fn::Not:
    - Fn::Equals:
      - Ref: TracingMode
      - ''
  UseCustomDomain:
    Fn::Not:
    - Fn::Equals:
      - Ref: CustomDomain
      - ''
  EnableDebug:
    Fn::Equals:
    - Ref: Debug
    - true
  CreateAlarmSNSTopic:
    Fn::Equals:
    - Ref: AlarmTopicArn
    - ''
  IsDeployFromSource:
    Fn::Equals:
    - Ref: DeployFromSource
    - true
  CreateVpc:
    Fn::Equals:
    - Ref: VpcID
    - ''
Resources:
  AuditLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - ExpirationInDays: 365
          NoncurrentVersionExpirationInDays: 30
          Status: Enabled
      LoggingConfiguration:
        Fn::If:
        - EnableAccessLogs
        - DestinationBucketName:
            Fn::If:
            - ExternalAccessLogs
            - Ref: AccessLogsBucket
            - Ref: AWS::NoValue
          LogFilePrefix:
            Fn::If:
            - ExternalAccessLogs
            - Fn::Sub: panther-source-${AWS::AccountId}-${AWS::Region}/
            - self/
        - Ref: AWS::NoValue
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
  AuditLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: PublicSubnetOne
    Properties:
      Bucket:
        Ref: AuditLogs
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: VPCFlowAclCheck
          Effect: Allow
          Principal:
            Service: delivery.logs.amazonaws.com
          Action: s3:GetBucketAcl
          Resource:
            Fn::GetAtt:
            - AuditLogs
            - Arn
        - Sid: VPCFlowWrite
          Effect: Allow
          Principal:
            Service: delivery.logs.amazonaws.com
          Action: s3:PutObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${AuditLogs}/AWSLogs/${AWS::AccountId}/*
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control
        - Sid: CloudTrailAclCheck
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:GetBucketAcl
          Resource:
            Fn::GetAtt:
            - AuditLogs
            - Arn
        - Sid: CloudTrailWrite
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:PutObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${AuditLogs}/AWSLogs/${AWS::AccountId}/*
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control
        - Sid: ALBWrite
          Effect: Allow
          Principal:
            AWS:
              Fn::FindInMap:
              - ELBAccounts
              - Ref: AWS::Region
              - ARN
          Action: s3:PutObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${AuditLogs}/AWSLogs/${AWS::AccountId}/*
        - Sid: GuardDutyBucketLocation
          Effect: Allow
          Principal:
            Service: guardduty.amazonaws.com
          Action: s3:GetBucketLocation
          Resource:
            Fn::GetAtt:
            - AuditLogs
            - Arn
        - Sid: GuardDutyWrite
          Effect: Allow
          Principal:
            Service: guardduty.amazonaws.com
          Action: s3:PutObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${AuditLogs}/*
        - Sid: ForceSSL
          Effect: Deny
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${AuditLogs}/*
          Condition:
            Bool:
              aws:SecureTransport: false
  UnmonitoredAuditLogs:
    Condition: NotExternalAccessLogs
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - ExpirationInDays: 365
          NoncurrentVersionExpirationInDays: 30
          Status: Enabled
      LoggingConfiguration:
        Fn::If:
        - EnableAccessLogs
        - DestinationBucketName:
            Ref: AWS::NoValue
          LogFilePrefix: self/
        - Ref: AWS::NoValue
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
  UnmonitoredAuditLogsBucketPolicy:
    Condition: NotExternalAccessLogs
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: UnmonitoredAuditLogs
      PolicyDocument:
        Statement:
        - Sid: ForceSSL
          Effect: Deny
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${UnmonitoredAuditLogs}/*
          Condition:
            Bool:
              aws:SecureTransport: false
  Source:
    Condition: IsDeployFromSource
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - ExpirationInDays: 90
          Status: Enabled
      LoggingConfiguration:
        Fn::If:
        - EnableAccessLogs
        - DestinationBucketName:
            Fn::If:
            - ExternalAccessLogs
            - Ref: AccessLogsBucket
            - Ref: AuditLogs
          LogFilePrefix:
            Fn::Sub: panther-source-${AWS::AccountId}-${AWS::Region}/
        - Ref: AWS::NoValue
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
  SourceBucketPolicy:
    Condition: IsDeployFromSource
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Source
      PolicyDocument:
        Statement:
        - Sid: ForceSSL
          Effect: Deny
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${Source}/*
          Condition:
            Bool:
              aws:SecureTransport: false
  AnalysisVersions:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - NoncurrentVersionExpirationInDays: 365
          Status: Enabled
      LoggingConfiguration:
        Fn::If:
        - EnableAccessLogs
        - DestinationBucketName:
            Fn::If:
            - ExternalAccessLogs
            - Ref: AccessLogsBucket
            - Ref: AuditLogs
          LogFilePrefix:
            Fn::Sub: panther-analysis-versions-${AWS::AccountId}-${AWS::Region}/
        - Ref: AWS::NoValue
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
  AnalysisVersionsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: AnalysisVersions
      PolicyDocument:
        Statement:
        - Sid: ForceSSL
          Effect: Deny
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${AnalysisVersions}/*
          Condition:
            Bool:
              aws:SecureTransport: false
  InputDataBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LoggingConfiguration:
        Fn::If:
        - EnableAccessLogs
        - DestinationBucketName:
            Fn::If:
            - ExternalAccessLogs
            - Ref: AccessLogsBucket
            - Ref: AuditLogs
          LogFilePrefix:
            Fn::Sub: panther-input-data-${AWS::AccountId}-${AWS::Region}/
        - Ref: AWS::NoValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
        - Id: WeekExpiration
          Status: Enabled
          ExpirationInDays: 7
          NoncurrentVersionExpirationInDays: 7
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      NotificationConfiguration:
        TopicConfigurations:
        - Topic:
            Ref: InputNotificationsTopic
          Event: s3:ObjectCreated:*
  InputDataBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: InputDataBucket
      PolicyDocument:
        Statement:
        - Sid: ForceSSL
          Effect: Deny
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${InputDataBucket}/*
          Condition:
            Bool:
              aws:SecureTransport: false
  ProcessedData:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LoggingConfiguration:
        Fn::If:
        - EnableAccessLogs
        - DestinationBucketName:
            Fn::If:
            - ExternalAccessLogs
            - Ref: AccessLogsBucket
            - Ref: UnmonitoredAuditLogs
          LogFilePrefix:
            Fn::Sub: panther-processed-data-${AWS::AccountId}-${AWS::Region}/
        - Ref: AWS::NoValue
      ReplicationConfiguration:
        Fn::If:
        - ReplicateData
        - Role:
            Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/panther-data-replication-role-${AWS::Region}
          Rules:
          - Destination:
              Bucket:
                Ref: DataReplicationBucket
              StorageClass: GLACIER
            Prefix: ''
            Status: Enabled
        - Ref: AWS::NoValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  DataReplicationRole:
    Condition: ReplicateData
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: panther-data-replication-role-${AWS::Region}
      Description: Role used by S3 for data replication
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: s3.amazonaws.com
      Policies:
      - PolicyName: ReadData
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - s3:GetReplicationConfiguration
            - s3:ListBucket
            Resource:
              Fn::GetAtt:
              - ProcessedData
              - Arn
          - Effect: Allow
            Action:
            - s3:GetObjectVersion
            - s3:GetObjectVersionAcl
            - s3:GetObjectVersionTagging
            Resource:
              Fn::Sub: arn:${AWS::Partition}:s3:::${ProcessedData}/*
      - PolicyName: ReplicateData
        PolicyDocument:
          Statement:
            Effect: Allow
            Action:
            - s3:ReplicateObject
            - s3:ReplicateDelete
            - s3:ReplicateTags
            Resource:
              Fn::Sub: ${DataReplicationBucket}/*
  ProcessedDataPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: ProcessedData
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: ForceSSL
          Effect: Deny
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${ProcessedData}/*
          Condition:
            Bool:
              aws:SecureTransport: false
        - Fn::If:
          - ConfigureLogSubscriptions
          - Sid: ReadBucket
            Effect: Allow
            Principal:
              AWS:
                Ref: LogSubscriptionPrincipals
            Action: s3:ListBucket
            Resource:
              Fn::GetAtt:
              - ProcessedData
              - Arn
          - Ref: AWS::NoValue
        - Fn::If:
          - ConfigureLogSubscriptions
          - Sid: ReadLogAndRuleData
            Effect: Allow
            Principal:
              AWS:
                Ref: LogSubscriptionPrincipals
            Action:
            - s3:GetObject
            - s3:GetObjectVersion
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${ProcessedData}/logs/*
            - Fn::Sub: arn:${AWS::Partition}:s3:::${ProcessedData}/rules/*
          - Ref: AWS::NoValue
  AthenaResults:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LifecycleConfiguration:
        Rules:
        - ExpirationInDays: 30
          Status: Enabled
      LoggingConfiguration:
        Fn::If:
        - EnableAccessLogs
        - DestinationBucketName:
            Fn::If:
            - ExternalAccessLogs
            - Ref: AccessLogsBucket
            - Ref: AuditLogs
          LogFilePrefix:
            Fn::Sub: panther-athena-results-${AWS::AccountId}-${AWS::Region}/
        - Ref: AWS::NoValue
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
  AthenaResultsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: AthenaResults
      PolicyDocument:
        Statement:
        - Sid: ForceSSL
          Effect: Deny
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:${AWS::Partition}:s3:::${AthenaResults}/*
          Condition:
            Bool:
              aws:SecureTransport: false
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
        InviteMessageTemplate:
          EmailSubject: Welcome to Panther!
          EmailMessage:
            Fn::Sub:
            - "<br />Welcome to Panther! We're very excited to have you on board!\n\
              <br />\n<br />To get started, sign in to your <a href=\"https://${PantherHost}/sign-in\"\
              >Panther dashboard</a> with the following temporary credentials:\n<br\
              \ />\n<br />* Username: {username}\n<br />* Password: {####}\n<br />\n\
              <br />Need help, or have questions? Just email us at support@runpanther.io,\
              \ we'd love to help.\n<br />\n<br />Yours truly,\n<br />Panther - https://runpanther.io\n\
              <br />\n<br /><small>Copyright \xA9 2020 Panther Labs Inc. All rights\
              \ reserved.</small>\n"
            - PantherHost:
                Fn::If:
                - UseCustomDomain
                - Ref: CustomDomain
                - Fn::GetAtt:
                  - PublicLoadBalancer
                  - DNSName
      AutoVerifiedAttributes:
      - email
      LambdaConfig:
        CustomMessage:
          Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:panther-users-api
      Policies:
        PasswordPolicy:
          MinimumLength: 12
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
      - AttributeDataType: String
        Mutable: true
        Name: email
        Required: true
      - AttributeDataType: String
        Mutable: true
        Name: given_name
      - AttributeDataType: String
        Mutable: true
        Name: family_name
      - AttributeDataType: String
        Mutable: true
        Name: role_id
        StringAttributeConstraints:
          MinLength: '36'
          MaxLength: '36'
      UsernameAttributes:
      - email
      UserPoolAddOns:
        AdvancedSecurityMode: ENFORCED
      UserPoolName: panther-users
  DynamoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: application-autoscaling.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: DynamoScaling
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - cloudwatch:PutMetricAlarm
            - cloudwatch:DescribeAlarms
            - cloudwatch:GetMetricStatistics
            - cloudwatch:SetAlarmState
            - cloudwatch:DeleteAlarms
            Resource: '*'
          - Effect: Allow
            Action:
            - dynamodb:DescribeTable
            - dynamodb:UpdateTable
            Resource:
              Fn::Sub: arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/panther-*
  PantherWebImageRepository:
    Condition: IsDeployFromSource
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: panther-web
      LifecyclePolicy:
        RegistryId:
          Ref: AWS::AccountId
        LifecyclePolicyText: "{\n  \"rules\": [\n    {\n      \"rulePriority\": 1,\n\
          \      \"description\": \"Makes sure to keep only the last 10 images that\
          \ have been uploaded\",\n      \"selection\": {\n        \"tagStatus\":\
          \ \"any\",\n        \"countType\": \"imageCountMoreThan\",\n        \"countNumber\"\
          : 10\n      },\n      \"action\": { \"type\": \"expire\" }\n    }\n  ]\n\
          }\n"
  VPC:
    Condition: CreateVpc
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock:
        Fn::FindInMap:
        - SubnetConfig
        - VPC
        - CIDR
      Tags:
      - Key: Name
        Value: panther-vpc
  FlowLogs:
    Condition: CreateVpc
    DependsOn: AuditLogsBucketPolicy
    Type: AWS::EC2::FlowLog
    Properties:
      LogDestination:
        Fn::Sub: ${AuditLogs.Arn}/${VPC}/
      LogDestinationType: s3
      ResourceId:
        Ref: VPC
      ResourceType: VPC
      TrafficType: ALL
      Tags:
      - Key: Name
        Value: panther-flowlogs
  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: ''
      VpcId:
        Fn::If:
        - CreateVpc
        - Ref: VPC
        - Ref: VpcID
      CidrBlock:
        Fn::If:
        - CreateVpc
        - Fn::FindInMap:
          - SubnetConfig
          - PublicOne
          - CIDR
        - Ref: SubnetOneIPRange
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: panther-subnet-one
  PublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 1
        - Fn::GetAZs: ''
      VpcId:
        Fn::If:
        - CreateVpc
        - Ref: VPC
        - Ref: VpcID
      CidrBlock:
        Fn::If:
        - CreateVpc
        - Fn::FindInMap:
          - SubnetConfig
          - PublicTwo
          - CIDR
        - Ref: SubnetTwoIPRange
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: panther-subnet-two
  InternetGateway:
    Condition: CreateVpc
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: panther-internet-gateway
  GatewayAttachment:
    Condition: CreateVpc
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PublicRouteTable:
    Condition: CreateVpc
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: panther-public-route-table
  PublicRoute:
    Condition: CreateVpc
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId:
        Ref: InternetGateway
  PublicSubnetOneRouteTableAssociation:
    Condition: CreateVpc
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetOne
      RouteTableId:
        Ref: PublicRouteTable
  PublicSubnetTwoRouteTableAssociation:
    Condition: CreateVpc
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnetTwo
      RouteTableId:
        Ref: PublicRouteTable
  PublicLoadBalancerSecurityGroup:
    Condition: CreateVpc
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: panther-web-lb
      GroupDescription: Access to the public facing load balancer
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
      - CidrIp:
          Ref: LoadBalancerSecurityGroupCidr
        FromPort: 80
        ToPort: 80
        IpProtocol: tcp
      - CidrIp:
          Ref: LoadBalancerSecurityGroupCidr
        FromPort: 443
        ToPort: 443
        IpProtocol: tcp
      Tags:
      - Key: Name
        Value: panther-web-lb-sg
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: AuditLogsBucketPolicy
    Properties:
      Name: web
      Scheme:
        Fn::If:
        - CreateVpc
        - internet-facing
        - internal
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      - Key: access_logs.s3.enabled
        Value: 'true'
      - Key: access_logs.s3.bucket
        Value:
          Ref: AuditLogs
      Subnets:
      - Ref: PublicSubnetOne
      - Ref: PublicSubnetTwo
      SecurityGroups:
      - Fn::If:
        - CreateVpc
        - Ref: PublicLoadBalancerSecurityGroup
        - Ref: SecurityGroupID
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: panther-web
      HealthCheckProtocol: HTTP
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 60
      HealthCheckPath: /healthcheck
      HealthCheckTimeoutSeconds: 6
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '0'
      TargetType: ip
      Port: 80
      Protocol: HTTP
      VpcId:
        Fn::If:
        - CreateVpc
        - Ref: VPC
        - Ref: VpcID
  WebApplicationServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: panther-web-container
      GroupDescription: Access to the Fargate containers
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId:
          Fn::If:
          - CreateVpc
          - Ref: PublicLoadBalancerSecurityGroup
          - Ref: SecurityGroupID
      VpcId:
        Fn::If:
        - CreateVpc
        - Ref: VPC
        - Ref: VpcID
      Tags:
      - Key: Name
        Value: panther-web-container-sg
  EcsSecurityGroupIngressFromPublicALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the public ALB
      GroupId:
        Ref: WebApplicationServerSecurityGroup
      IpProtocol: '-1'
      SourceSecurityGroupId:
        Fn::If:
        - CreateVpc
        - Ref: PublicLoadBalancerSecurityGroup
        - Ref: SecurityGroupID
  AppsyncServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Appsync service role which invokes API lambdas and gateways and
        writes CloudWatch logs
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: appsync.amazonaws.com
      ManagedPolicyArns:
      - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
      Policies:
      - PolicyName: InvokeLegacyApis
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource:
              Fn::Sub: arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:panther-*-api
      - PolicyName: InvokeGatewayApis
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: execute-api:Invoke
            Resource:
              Fn::Sub: arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:*
  GraphQLApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: panther-graphql-api
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      UserPoolConfig:
        AwsRegion:
          Ref: AWS::Region
        UserPoolId:
          Ref: UserPool
        DefaultAction: ALLOW
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
          - AppsyncServiceRole
          - Arn
        FieldLogLevel: ALL
        ExcludeVerboseContent:
          Fn::If:
          - EnableDebug
          - false
          - true
      XrayEnabled:
        Fn::If:
        - TracingEnabled
        - true
        - Ref: AWS::NoValue
  AppsyncLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/appsync/apis/${GraphQLApi.ApiId}
      RetentionInDays:
        Ref: CloudWatchLogRetentionDays
  QueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Encryption key for all panther SQS queues
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
        - Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
        - Effect: Allow
          Principal:
            Service: sns.amazonaws.com
          Action:
          - kms:GenerateDataKey
          - kms:Decrypt
          Resource: '*'
        - Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action:
          - kms:GenerateDataKey
          - kms:Decrypt
          Resource: '*'
  QueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/panther-sqs
      TargetKeyId:
        Ref: QueueEncryptionKey
  OutputsEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/panther-alert-outputs
      TargetKeyId:
        Ref: OutputsEncryptionKey
  OutputsEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Encrypts Panther's alert output configuration
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
        - Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
  ProcessedDataNotifications:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: panther-processed-data-notifications
      KmsMasterKeyId:
        Ref: QueueEncryptionKey
  ProcessedDataNotificationsTopicPolicy:
    Condition: ConfigureLogSubscriptions
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
      - Ref: ProcessedDataNotifications
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: ReadTopic
          Effect: Allow
          Principal:
            AWS:
              Ref: LogSubscriptionPrincipals
          Action: sns:Subscribe
          Resource:
            Ref: ProcessedDataNotifications
  InputNotificationsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: panther-boostrap-input-data-notifications
      KmsMasterKeyId:
        Ref: QueueEncryptionKey
  InputNotificationsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
      - Ref: InputNotificationsTopic
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: AllowS3EventNotifications
          Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action: sns:Publish
          Resource:
            Ref: InputNotificationsTopic
        - Sid: AllowSubscriptionToPantherInput
          Effect: Allow
          Principal:
            AWS:
              Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:root
          Action: sns:Subscribe
          Resource:
            Ref: InputNotificationsTopic
  AlarmNotifications:
    Condition: CreateAlarmSNSTopic
    Type: AWS::SNS::Topic
    Properties:
      TopicName: panther-cw-alarms
Outputs:
  AnalysisVersionsBucket:
    Description: S3 bucket name for analysis-api versioning
    Value:
      Ref: AnalysisVersions
  AthenaResultsBucket:
    Description: S3 bucket name for Athena results
    Value:
      Ref: AthenaResults
  AuditLogsBucket:
    Description: S3 bucket name for Panther audit logs (includes s3 access, alb, vpc)
    Value:
      Ref: AuditLogs
  ProcessedDataBucket:
    Description: S3 bucket name for processed log data
    Value:
      Ref: ProcessedData
  SourceBucket:
    Condition: IsDeployFromSource
    Description: S3 bucket name for Panther CloudFormation packaging
    Value:
      Ref: Source
  InputDataBucket:
    Description: S3 bucket name for bucket that will contain data that are meant to
      be processed by the log analysis
    Value:
      Ref: InputDataBucket
  SubnetOneId:
    Description: Public subnet one
    Value:
      Ref: PublicSubnetOne
  SubnetTwoId:
    Description: Public subnet two
    Value:
      Ref: PublicSubnetTwo
  LoadBalancerArn:
    Description: Web load balancer arn
    Value:
      Ref: PublicLoadBalancer
  LoadBalancerFullName:
    Description: Web load balancer full resource name
    Value:
      Fn::GetAtt:
      - PublicLoadBalancer
      - LoadBalancerFullName
  LoadBalancerTargetGroup:
    Description: Web load balancer distribution target group ARN
    Value:
      Ref: TargetGroup
  LoadBalancerUrl:
    Description: Panther URL - application load balancer or custom domain
    Value:
      Fn::If:
      - UseCustomDomain
      - Ref: CustomDomain
      - Fn::GetAtt:
        - PublicLoadBalancer
        - DNSName
  WebSecurityGroup:
    Description: Public web app security group
    Value:
      Ref: WebApplicationServerSecurityGroup
  ImageRegistryName:
    Description: Name of the ECR repository hosting web images
    Value:
      Fn::If:
      - IsDeployFromSource
      - Ref: PantherWebImageRepository
      - ''
  ImageRegistryUri:
    Condition: IsDeployFromSource
    Description: Docker image registry which stores web app images
    Value:
      Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/${PantherWebImageRepository}
  AppsyncServiceRoleArn:
    Description: Appsync IAM role for logs and resolvers
    Value:
      Fn::GetAtt:
      - AppsyncServiceRole
      - Arn
  GraphQLApiEndpoint:
    Description: The URL to the Appsync GraphQL Endpoint
    Value:
      Fn::GetAtt:
      - GraphQLApi
      - GraphQLUrl
  GraphQLApiId:
    Description: The id of the Appsync GraphQL Endpoint
    Value:
      Fn::GetAtt:
      - GraphQLApi
      - ApiId
  UserPoolId:
    Description: Cognito user pool ID
    Value:
      Ref: UserPool
  DynamoScalingRoleArn:
    Description: IAM role arn for DynamoDB auto-scaling
    Value:
      Fn::GetAtt:
      - DynamoScalingRole
      - Arn
  OutputsEncryptionKeyId:
    Description: KMS key for encrypting Panther alert outputs
    Value:
      Ref: OutputsEncryptionKey
  QueueEncryptionKeyId:
    Description: KMS key for encrypting Panther SQS queues
    Value:
      Ref: QueueEncryptionKey
  ProcessedDataTopicArn:
    Description: SNS topic ARN for processed log data notifications
    Value:
      Ref: ProcessedDataNotifications
  InputDataTopicArn:
    Description: SNS topic ARN for data that is sent as input to Log Analysis
    Value:
      Ref: InputNotificationsTopic
  AlarmTopicArn:
    Description: SNS topic ARN for CloudWatch alarms
    Value:
      Fn::If:
      - CreateAlarmSNSTopic
      - Ref: AlarmNotifications
      - Ref: AlarmTopicArn
